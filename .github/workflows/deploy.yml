name: Deploy to VPS

on:
  push:
    branches:
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Print Current Working Directory
        run: pwd

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        env:
          PORT: ${{ secrets.PORT }}
          BILIBILI_COOKIE: ${{ secrets.BILIBILI_COOKIE }}
          PROXY: ${{ secrets.PROXY }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          NINE_ANIME_HELPER_URL: ${{ secrets.NINE_ANIME_HELPER_URL }}
          TMDB_KEY: ${{ secrets.TMDB_KEY }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          
        run: |
          docker build \
            --build-arg PORT \
            --build-arg BILIBILI_COOKIE \
            --build-arg PROXY \
            --build-arg REDIS_HOST \
            --build-arg REDIS_PORT \
            --build-arg REDIS_PASSWORD \
            --build-arg NINE_ANIME_HELPER_URL \
            --build-arg TMDB_KEY \
            --build-arg NODE_ENV \
            -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_TAG }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_TAG }}:latest

      - name: SSH into VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Pull the Docker image from the registry
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_TAG }}:latest

            # Stop and remove the existing container (if any)
            docker stop ${{ secrets.DOCKER_TAG }} || true
            docker rm ${{ secrets.DOCKER_TAG }} || true

            # Run the new container
            docker run -d --name ${{ secrets.DOCKER_TAG }} -p 4010:4010 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_TAG }}:latest

            # Check NGINX configuration
            sudo nginx -t

            # Restart NGINX
            sudo service nginx restart
